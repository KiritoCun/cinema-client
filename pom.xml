<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>vn.udn.dut.cinema</groupId>
    <artifactId>cinema</artifactId>
    <version>${revision}</version>

    <name>Cinema</name>
    <url>https://gitlab.com/student-company/dx-projects/cinema-port/cinema</url>
    <description>Star Cinema platform</description>

    <properties>
        <revision>5.1.0-SNAPSHOT</revision>
        <spring-boot.version>3.0.12</spring-boot.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <java.version>17</java.version>
        <spring-boot.mybatis>3.0.1</spring-boot.mybatis>
        <springdoc.version>2.1.0</springdoc.version>
        <therapi-javadoc.version>0.15.0</therapi-javadoc.version>
        <poi.version>5.2.3</poi.version>
        <easyexcel.version>3.2.1</easyexcel.version>
        <velocity.version>2.3</velocity.version>
        <satoken.version>1.34.0</satoken.version>
        <mybatis-plus.version>3.5.3.1</mybatis-plus.version>
        <p6spy.version>3.9.1</p6spy.version>
        <hutool.version>5.8.18</hutool.version>
        <okhttp.version>4.10.0</okhttp.version>
        <spring-boot-admin.version>3.0.4</spring-boot-admin.version>
        <redisson.version>3.20.1</redisson.version>
        <lock4j.version>2.2.4</lock4j.version>
        <dynamic-ds.version>3.6.1</dynamic-ds.version>
        <alibaba-ttl.version>2.14.2</alibaba-ttl.version>
        <xxl-job.version>2.4.0</xxl-job.version>
        <mapstruct-plus.version>1.2.5</mapstruct-plus.version>
        <mapstruct-plus.lombok.version>0.2.0</mapstruct-plus.lombok.version>
        <lombok.version>1.18.26</lombok.version>
        <bouncycastle.version>1.72</bouncycastle.version>
        <openfeign.version>4.0.1</openfeign.version>
        <logback-gelf.version>4.0.2</logback-gelf.version>
        <json.version>20230618</json.version>
        <!-- Offline IP address location library -->
        <ip2region.version>2.7.0</ip2region.version>
        <gson.version>2.10.1</gson.version>

        <!-- Temporary fix for snakeyaml vulnerability -->
        <snakeyaml.version>1.33</snakeyaml.version>

        <!-- OSS configuration -->
        <aws-java-sdk-s3.version>1.12.400</aws-java-sdk-s3.version>
        <!-- SMS configuration -->
        <aliyun.sms.version>2.0.23</aliyun.sms.version>
        <tencent.sms.version>3.1.687</tencent.sms.version>

        <!-- plugin version -->
        <maven-jar-plugin.version>3.2.2</maven-jar-plugin.version>
        <maven-war-plugin.version>3.2.2</maven-war-plugin.version>
        <maven-compiler-plugin.verison>3.11.0</maven-compiler-plugin.verison>
        <maven-surefire-plugin.version>3.0.0</maven-surefire-plugin.version>
        <flatten-maven-plugin.version>1.3.0</flatten-maven-plugin.version>
    </properties>

    <profiles>
        <profile>
            <id>local</id>
            <properties>
                <!-- Environment ID, which needs to correspond to the name of the configuration file -->
                <profiles.active>local</profiles.active>
                <logging.level>debug</logging.level>
            </properties>
        </profile>
        <profile>
            <id>dev</id>
            <properties>
                <!-- Environment ID, which needs to correspond to the name of the configuration file -->
                <profiles.active>dev</profiles.active>
                <logging.level>debug</logging.level>
            </properties>
            <activation>
                <!-- default environment -->
                <activeByDefault>true</activeByDefault>
            </activation>
        </profile>
        <profile>
            <id>uat</id>
            <properties>
                <profiles.active>uat</profiles.active>
                <logging.level>debug</logging.level>
            </properties>
        </profile>
        <profile>
            <id>prod</id>
            <properties>
                <profiles.active>prod</profiles.active>
                <logging.level>debug</logging.level>
            </properties>
        </profile>
    </profiles>

    <!-- Dependency statement -->
    <dependencyManagement>
        <dependencies>

            <!-- Dependency configuration of SpringBoot-->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring-boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <!-- hutool dependency configuration-->
            <dependency>
                <groupId>cn.hutool</groupId>
                <artifactId>hutool-bom</artifactId>
                <version>${hutool.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <!-- common dependency configuration-->
            <dependency>
                <groupId>vn.udn.dut.cinema</groupId>
                <artifactId>cinema-common-bom</artifactId>
                <version>${revision}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <dependency>
                <groupId>org.springdoc</groupId>
                <artifactId>springdoc-openapi-starter-webmvc-api</artifactId>
                <version>${springdoc.version}</version>
            </dependency>

            <dependency>
                <groupId>com.github.therapi</groupId>
                <artifactId>therapi-runtime-javadoc</artifactId>
                <version>${therapi-javadoc.version}</version>
            </dependency>

            <dependency>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <version>${lombok.version}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.poi</groupId>
                <artifactId>poi</artifactId>
                <version>${poi.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.poi</groupId>
                <artifactId>poi-ooxml</artifactId>
                <version>${poi.version}</version>
            </dependency>
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>easyexcel</artifactId>
                <version>${easyexcel.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.apache.poi</groupId>
                        <artifactId>poi-ooxml-schemas</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>

            <!-- velocity code generation using templates -->
            <dependency>
                <groupId>org.apache.velocity</groupId>
                <artifactId>velocity-engine-core</artifactId>
                <version>${velocity.version}</version>
            </dependency>

            <!-- Sa-Token authority authentication, online documentation: http://sa-token.dev33.cn/ -->
            <dependency>
                <groupId>cn.dev33</groupId>
                <artifactId>sa-token-spring-boot3-starter</artifactId>
                <version>${satoken.version}</version>
            </dependency>
            <!-- Sa-Token integration jwt -->
            <dependency>
                <groupId>cn.dev33</groupId>
                <artifactId>sa-token-jwt</artifactId>
                <version>${satoken.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>cn.hutool</groupId>
                        <artifactId>hutool-all</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>cn.dev33</groupId>
                <artifactId>sa-token-core</artifactId>
                <version>${satoken.version}</version>
            </dependency>

            <!-- dynamic-datasource multiple data sources-->
            <dependency>
                <groupId>com.baomidou</groupId>
                <artifactId>dynamic-datasource-spring-boot-starter</artifactId>
                <version>${dynamic-ds.version}</version>
            </dependency>

            <dependency>
                <groupId>org.mybatis.spring.boot</groupId>
                <artifactId>mybatis-spring-boot-starter</artifactId>
                <version>${spring-boot.mybatis}</version>
            </dependency>

            <dependency>
                <groupId>com.baomidou</groupId>
                <artifactId>mybatis-plus-boot-starter</artifactId>
                <version>${mybatis-plus.version}</version>
            </dependency>

            <dependency>
                <groupId>com.baomidou</groupId>
                <artifactId>mybatis-plus-annotation</artifactId>
                <version>${mybatis-plus.version}</version>
            </dependency>

            <!-- sql performance analysis plug-in -->
            <dependency>
                <groupId>p6spy</groupId>
                <artifactId>p6spy</artifactId>
                <version>${p6spy.version}</version>
            </dependency>

            <dependency>
                <groupId>com.squareup.okhttp3</groupId>
                <artifactId>okhttp</artifactId>
                <version>${okhttp.version}</version>
            </dependency>

            <dependency>
                <groupId>com.amazonaws</groupId>
                <artifactId>aws-java-sdk-s3</artifactId>
                <version>${aws-java-sdk-s3.version}</version>
            </dependency>

            <dependency>
                <groupId>com.aliyun</groupId>
                <artifactId>dysmsapi20170525</artifactId>
                <version>${aliyun.sms.version}</version>
            </dependency>

            <dependency>
                <groupId>com.tencentcloudapi</groupId>
                <artifactId>tencentcloud-sdk-java-sms</artifactId>
                <version>${tencent.sms.version}</version>
            </dependency>

            <dependency>
                <groupId>de.codecentric</groupId>
                <artifactId>spring-boot-admin-starter-server</artifactId>
                <version>${spring-boot-admin.version}</version>
            </dependency>
            <dependency>
                <groupId>de.codecentric</groupId>
                <artifactId>spring-boot-admin-starter-client</artifactId>
                <version>${spring-boot-admin.version}</version>
            </dependency>

            <!--redisson-->
            <dependency>
                <groupId>org.redisson</groupId>
                <artifactId>redisson-spring-boot-starter</artifactId>
                <version>${redisson.version}</version>
            </dependency>

            <dependency>
                <groupId>com.baomidou</groupId>
                <artifactId>lock4j-redisson-spring-boot-starter</artifactId>
                <version>${lock4j.version}</version>
            </dependency>

            <!-- xxl-job-core -->
            <dependency>
                <groupId>com.xuxueli</groupId>
                <artifactId>xxl-job-core</artifactId>
                <version>${xxl-job.version}</version>
            </dependency>

            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>transmittable-thread-local</artifactId>
                <version>${alibaba-ttl.version}</version>
            </dependency>

            <!-- Temporary fix for snakeyaml vulnerability -->
            <dependency>
                <groupId>org.yaml</groupId>
                <artifactId>snakeyaml</artifactId>
                <version>${snakeyaml.version}</version>
            </dependency>

            <!-- Encrypted package import -->
            <dependency>
                <groupId>org.bouncycastle</groupId>
                <artifactId>bcprov-jdk15to18</artifactId>
                <version>${bouncycastle.version}</version>
            </dependency>
            
            <!-- https://mvnrepository.com/artifact/org.springframework.cloud/spring-cloud-starter-openfeign -->
			<dependency>
			    <groupId>org.springframework.cloud</groupId>
			    <artifactId>spring-cloud-starter-openfeign</artifactId>
			    <version>${openfeign.version}</version>
			</dependency>
			
			<!-- https://mvnrepository.com/artifact/de.siegmar/logback-gelf -->
			<dependency>
			    <groupId>de.siegmar</groupId>
			    <artifactId>logback-gelf</artifactId>
			    <version>${logback-gelf.version}</version>
			</dependency>
				
			<!-- https://mvnrepository.com/artifact/org.json/json -->
			<dependency>
			    <groupId>org.json</groupId>
			    <artifactId>json</artifactId>
			    <version>${json.version}</version>
			</dependency>

            <dependency>
                <groupId>io.github.linpeilie</groupId>
                <artifactId>mapstruct-plus-spring-boot-starter</artifactId>
                <version>${mapstruct-plus.version}</version>
            </dependency>
            
            <!-- https://mvnrepository.com/artifact/com.google.code.gson/gson -->
			<dependency>
			    <groupId>com.google.code.gson</groupId>
			    <artifactId>gson</artifactId>
			    <version>${gson.version}</version>
			</dependency>


            <!-- Offline IP address location library ip2region -->
            <dependency>
                <groupId>org.lionsoul</groupId>
                <artifactId>ip2region</artifactId>
                <version>${ip2region.version}</version>
            </dependency>

            <dependency>
                <groupId>vn.udn.dut.cinema</groupId>
                <artifactId>cinema-system</artifactId>
                <version>${revision}</version>
            </dependency>
            
            <dependency>
                <groupId>vn.udn.dut.cinema</groupId>
                <artifactId>cinema-port</artifactId>
                <version>${revision}</version>
            </dependency>
            
            <dependency>
                <groupId>vn.udn.dut.cinema</groupId>
                <artifactId>cinema-public</artifactId>
                <version>${revision}</version>
            </dependency>
            
            <!-- Jasper reports dependency. -->
	        <!-- https://mvnrepository.com/artifact/com.lowagie/itext -->
	        <dependency>
	            <groupId>com.lowagie</groupId>
	            <artifactId>itext</artifactId>
	            <version>2.1.7</version>
	        </dependency>
	        <dependency>
	            <groupId>net.sf.jasperreports</groupId>
	            <artifactId>jasperreports</artifactId>
	            <version>6.20.0</version>
	            <exclusions>
	                <exclusion>
	                    <groupId>com.lowagie</groupId>
	                    <artifactId>itext</artifactId>
	                </exclusion>
	            </exclusions>
	        </dependency>
	        <!-- https://mvnrepository.com/artifact/net.sf.jasperreports/jasperreports-fonts -->
			<dependency>
			    <groupId>net.sf.jasperreports</groupId>
			    <artifactId>jasperreports-fonts</artifactId>
			    <version>6.20.0</version>
			</dependency>
	
	        <!-- https://mvnrepository.com/artifact/com.google.zxing/core -->
			<dependency>
			    <groupId>com.google.zxing</groupId>
			    <artifactId>core</artifactId>
			    <version>3.5.0</version>
			</dependency>
	
			<!-- https://mvnrepository.com/artifact/com.google.zxing/javase -->
			<dependency>
			    <groupId>com.google.zxing</groupId>
			    <artifactId>javase</artifactId>
			    <version>3.5.0</version>
			</dependency>
			
			<!-- https://mvnrepository.com/artifact/com.google.firebase/firebase-admin -->
			<dependency>
			    <groupId>com.google.firebase</groupId>
			    <artifactId>firebase-admin</artifactId>
			    <version>9.2.0</version>
			</dependency>

        </dependencies>
    </dependencyManagement>

    <modules>
        <module>cinema-admin</module>
        <module>cinema-customer</module>
        <module>cinema-common</module>
        <module>cinema-modules</module>
    </modules>
    <packaging>pom</packaging>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven-compiler-plugin.verison}</version>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                    <encoding>${project.build.sourceEncoding}</encoding>
                    <annotationProcessorPaths>
                        <path>
                            <groupId>com.github.therapi</groupId>
                            <artifactId>therapi-runtime-javadoc-scribe</artifactId>
                            <version>${therapi-javadoc.version}</version>
                        </path>
                        <path>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok</artifactId>
                            <version>${lombok.version}</version>
                        </path>
                        <path>
                            <groupId>org.springframework.boot</groupId>
                            <artifactId>spring-boot-configuration-processor</artifactId>
                            <version>${spring-boot.version}</version>
                        </path>
                        <path>
                            <groupId>io.github.linpeilie</groupId>
                            <artifactId>mapstruct-plus-processor</artifactId>
                            <version>${mapstruct-plus.version}</version>
                        </path>
                        <path>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok-mapstruct-binding</artifactId>
                            <version>${mapstruct-plus.lombok.version}</version>
                        </path>
                    </annotationProcessorPaths>
                    <compilerArgs>
                        <arg>-parameters</arg>
                    </compilerArgs>
                </configuration>
            </plugin>
            <!-- Unit tests use -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${maven-surefire-plugin.version}</version>
                <configuration>
                    <!-- Execute the corresponding @Tag test method according to the packaging environment -->
                    <groups>${profiles.active}</groups>
                    <!-- exclude tags -->
                    <excludedGroups>exclude</excludedGroups>
                </configuration>
            </plugin>
            <!-- Unified version number management -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>flatten-maven-plugin</artifactId>
                <version>${flatten-maven-plugin.version}</version>
                <configuration>
                    <updatePomFile>true</updatePomFile>
                    <flattenMode>resolveCiFriendliesOnly</flattenMode>
                </configuration>
                <executions>
                    <execution>
                        <id>flatten</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>flatten</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>flatten.clean</id>
                        <phase>clean</phase>
                        <goals>
                            <goal>clean</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <!-- close filter -->
                <filtering>false</filtering>
            </resource>
            <resource>
                <directory>src/main/resources</directory>
                <!-- Import all matching files for filtering -->
                <includes>
                    <include>application*</include>
                    <include>bootstrap*</include>
                    <include>banner*</include>
                </includes>
                <!-- Enable filtering means that the variables in this resource will be replaced by the values ​​in the filter -->
                <filtering>true</filtering>
            </resource>
        </resources>
    </build>

    <repositories>
        <repository>
            <id>public</id>
            <name>aliyun nexus</name>
            <url>https://maven.aliyun.com/repository/public/</url>
            <releases>
                <enabled>true</enabled>
            </releases>
        </repository>
    </repositories>

    <pluginRepositories>
        <pluginRepository>
            <id>public</id>
            <name>aliyun nexus</name>
            <url>https://maven.aliyun.com/repository/public/</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </pluginRepository>
    </pluginRepositories>

</project>


